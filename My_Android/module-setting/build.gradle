apply from: "../module.build.gradle"
android {
    defaultConfig {
        //如果是独立模块，则使用当前组件的包名
        if (isBuildModule.toBoolean()) {
            applicationId "com.qs.setting"
        }
    }
    //统一资源前缀，规范资源引用
    resourcePrefix "setting_"

    buildTypes{
        release{
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //params1 : string
            //params2 : buildType R文件引用
            //params3 : KEY  gradle.properties文件中的Key
            buildConfigField "String", "isBuildModule", "\"${isBuildModule}\""
            resValue("string" ,"isBuildModule" , "${isBuildModule}")
        }
        debug{
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //params1 : string
            //params2 : buildType R文件引用
            //params3 : KEY  gradle.properties文件中的Key
            buildConfigField "String", "isBuildModule", "\"${isBuildModule}\""
            resValue("string" ,"isBuildModule" , "${isBuildModule}")
        }
    }
}
dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    //组件依赖基础库
    api project(':library-base')
    //组件中依赖阿里路由编译框架
    annotationProcessor rootProject.ext.dependencies["arouter-compiler"]

    // skin-support 基础控件支持
    api rootProject.ext.dependencies["skin-support"]
    api rootProject.ext.dependencies["skin-support-design"]
    api rootProject.ext.dependencies["skin-support-cardview"]
    api rootProject.ext.dependencies["skin-support-constraint-layout"]
}